{"version":3,"sources":["components/contexts/ThemeContext.js","components/AppBar.js","components/AsteroidListItem.js","components/AsteroidList.js","App.js","serviceWorker.js","index.js"],"names":["ThemeContext","createContext","themeColors","primary","orange","secondary","lightBlue","hazard","red","lightTheme","createMuiTheme","palette","type","background","paper","default","darkTheme","ThemeContextProvider","props","useState","theme","localStorage","getItem","themeType","setTheme","Provider","value","toggleTheme","setItem","children","useStyles","makeStyles","root","flexGrow","menuButton","marginRight","spacing","title","lightBulbIcon","xmlns","width","height","viewBox","d","darkBulbIcon","SimpleAppBar","classes","useContext","className","AppBar","Toolbar","Typography","variant","IconButton","onClick","AsteroidListItem","date_full","ExpansionPanel","style","asteroid","is_potentially_hazardous_asteroid","backgroundColor","ExpansionPanelSummary","expandIcon","name","ExpansionPanelDetails","margin","padding","listStyle","gutterBottom","Link","href","id","color","close_approach_data","close_approach_date_full","split","parseFloat","estimated_diameter","meters","estimated_diameter_min","toLocaleString","estimated_diameter_max","relative_velocity","kilometers_per_second","miss_distance","kilometers","orbiting_body","progress","AsteroidList","res","setRes","loading","setLoading","useEffect","today","Date","fullDate","getFullYear","String","getMonth","padStart","getDate","axios","get","then","data","near_earth_objects","catch","err","console","log","asteroidList","map","n","index","key","CircularProgress","Grid","container","item","xs","justify","Paper","length","hazardList","filter","App","paddingTop","MuiThemeProvider","position","top","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.6cadb6be.chunk.js","sourcesContent":["import React, { createContext, useState } from 'react';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport orange from '@material-ui/core/colors/orange';\nimport lightBlue from '@material-ui/core/colors/lightBlue';\nimport red from '@material-ui/core/colors/red';\n\nexport const ThemeContext = createContext();\n\nconst themeColors = {\n    primary: orange,\n    secondary: lightBlue,\n    hazard: red[400],\n};\n\nconst lightTheme = createMuiTheme({\n    palette: {\n        ...themeColors,\n        type: 'light',\n        background: {\n            paper: '#f5f5f5',\n            default: \"#fff\",\n        }\n    }\n});\n\nconst darkTheme = createMuiTheme({\n    palette: {\n        ...themeColors,\n        type: 'dark',\n        background: {\n            paper: '#333',\n            default: \"#212121\",\n        }\n    }\n});\n\nconst themeType = () => {\n    const theme = localStorage.getItem('theme');\n    return theme ? theme : 'dark';\n};\n\nconst ThemeContextProvider = (props) => {\n\n    const [theme, setTheme] = useState(themeType() === 'light' ? lightTheme : darkTheme);\n\n    const toggleTheme = () => {\n        if (theme.palette.type === 'light') {\n            setTheme(darkTheme);\n            localStorage.setItem('theme', 'dark');\n        } else {\n            setTheme(lightTheme);\n            localStorage.setItem('theme', 'light');\n        }\n    };\n\n    return (\n        <ThemeContext.Provider value={{ theme, toggleTheme }}>\n            {props.children}\n        </ThemeContext.Provider>\n    );\n};\n\nexport default ThemeContextProvider;\n","import React, {useContext} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport CssBaseline from \"@material-ui/core/CssBaseline/CssBaseline\";\nimport IconButton from '@material-ui/core/IconButton';\nimport { ThemeContext } from \"./contexts/ThemeContext\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        flexGrow: 1,\n    },\n}));\n\nconst lightBulbIcon = <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M9 21c0 .55.45 1 1 1h4c.55 0 1-.45 1-1v-1H9v1zm3-19C8.14 2 5 5.14 5 9c0 2.38 1.19 4.47 3 5.74V17c0 .55.45 1 1 1h6c.55 0 1-.45 1-1v-2.26c1.81-1.27 3-3.36 3-5.74 0-3.86-3.14-7-7-7zm2.85 11.1l-.85.6V16h-4v-2.3l-.85-.6C7.8 12.16 7 10.63 7 9c0-2.76 2.24-5 5-5s5 2.24 5 5c0 1.63-.8 3.16-2.15 4.1z\"/></svg>;\nconst darkBulbIcon = <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"m9,21c0,0.55 0.45,1 1,1l4,0c0.55,0 1,-0.45 1,-1l0,-1l-6,0l0,1zm3,-19c-3.86,0 -7,3.14 -7,7c0,2.38 1.19,4.47 3,5.74l0,2.26c0,0.55 0.45,1 1,1l6,0c0.55,0 1,-0.45 1,-1l0,-2.26c1.81,-1.27 3,-3.36 3,-5.74c0,-3.86 -3.14,-7 -7,-7z\"/></svg>;\n\nfunction SimpleAppBar() {\n    const classes = useStyles();\n    const { theme, toggleTheme } = useContext(ThemeContext);\n\n    const ThemeIndicator = () => {\n        if (theme.palette.type === 'light')\n            return lightBulbIcon;\n        else\n            return darkBulbIcon;\n    };\n\n    return (\n        <div className={classes.root}>\n            <CssBaseline/>\n            <AppBar>\n                <Toolbar>\n                    <Typography variant=\"h6\" className={classes.title}>\n                        Asteroids\n                    </Typography>\n                    <IconButton onClick={toggleTheme}>\n                        <ThemeIndicator/>\n                    </IconButton>\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n}\n\nexport default SimpleAppBar;\n","import React, {useContext} from \"react\";\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport {ThemeContext} from \"./contexts/ThemeContext\";\n\nfunction AsteroidListItem(props) {\n    const { theme } = useContext(ThemeContext);\n    const approachTime = (date_full) => date_full === null ? 'Unknown' : `${date_full.split(' ')[1]} hrs`;\n\n    return(\n        <>\n            <ExpansionPanel style={props.asteroid\n                .is_potentially_hazardous_asteroid === true ? { backgroundColor: theme.palette.hazard } : {}}>\n                <ExpansionPanelSummary\n                    expandIcon={<ExpandMoreIcon />}>\n                    <Typography variant=\"body1\">{`${props.asteroid.name}`}</Typography>\n                </ExpansionPanelSummary>\n                <ExpansionPanelDetails>\n                    <ul style={{ margin: 0, padding: 0, listStyle: \"none\" }}>\n                        <li>\n                            <Typography variant=\"body1\" gutterBottom>\n                                {'ID: '}\n                                <Link href={`https://ssd.jpl.nasa.gov/sbdb.cgi?sstr=${props.asteroid.id};old=0;orb=1;cov=0;log=0;cad=0#orb`}\n                                      color=\"secondary\"\n                                      variant=\"inherit\">\n                                    {props.asteroid.id}\n                                </Link>\n                            </Typography>\n                        </li>\n                        <li>\n                            <Typography variant=\"body1\" gutterBottom>\n                                {`Close approach: ${approachTime(props.asteroid.close_approach_data[0]\n                                    .close_approach_date_full)}`}\n                            </Typography>\n                        </li>\n                        <li>\n                            <Typography variant=\"body1\" gutterBottom>\n                                {`Diameter: ${parseFloat(props.asteroid.estimated_diameter.meters\n                                    .estimated_diameter_min).toLocaleString()} m - ${parseFloat(props.asteroid\n                                    .estimated_diameter.meters.estimated_diameter_max).toLocaleString()} m`}\n                            </Typography>\n                        </li>\n                        <li>\n                            <Typography variant=\"body1\" gutterBottom>\n                                {`Relative Velocity: ${parseFloat(props.asteroid.close_approach_data[0]\n                                    .relative_velocity.kilometers_per_second).toLocaleString()} km/s`}\n                            </Typography>\n                        </li>\n                        <li>\n                            <Typography variant=\"body1\" gutterBottom>\n                                {`Miss Distance: ${parseFloat(props.asteroid.close_approach_data[0]\n                                    .miss_distance.kilometers).toLocaleString()} km`}\n                            </Typography>\n                        </li>\n                        <li>\n                            <Typography variant=\"body1\" gutterBottom>\n                                {`Orbiting Body: ${props.asteroid.close_approach_data[0].orbiting_body}`}\n                            </Typography>\n                        </li>\n                        <li>\n                            <Typography variant=\"body1\">\n                                {`Potentially Hazardous: ${props.asteroid\n                                    .is_potentially_hazardous_asteroid === true ? 'Yes' : 'No'}`}\n                            </Typography>\n                        </li>\n                    </ul>\n                </ExpansionPanelDetails>\n            </ExpansionPanel>\n        </>\n    );\n}\n\nexport default AsteroidListItem;\n","import React, {useEffect, useState} from \"react\";\nimport './css/AsteroidList.css'\nimport axios from 'axios';\nimport Grid from \"@material-ui/core/Grid\";\nimport AsteroidListItem from \"./AsteroidListItem\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {Paper} from \"@material-ui/core\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n        margin: theme.spacing(2),\n    },\n}));\n\nfunction AsteroidList() {\n    const [res, setRes] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const classes = useStyles();\n\n    useEffect(() => {\n        const today = new Date();\n        const fullDate = `${today.getFullYear()}-${String(today.getMonth() + 1).padStart(2, '0')}-${String(today.getDate()).padStart(2, '0')}`;\n        axios.get(`https://secret-meadow-61226.herokuapp.com?date=${fullDate}`)\n            .then(res => {\n                setRes(res.data.near_earth_objects[fullDate]);\n                setLoading(false);\n            })\n            .catch(err => console.log(err));\n    }, []);\n\n    const asteroidList = res.map((n, index) => <AsteroidListItem key={index}\n                                                                 index={index}\n                                                                 asteroid={n}/>);\n\n    const PotentiallyHazardous = () => {\n        let hazardList = res.filter(asteroid => asteroid.is_potentially_hazardous_asteroid === true);\n        hazardList = hazardList.map(n => n.name);\n        hazardList = hazardList.map((n, index) => <li key={index}><Typography variant=\"body2\">{n}</Typography></li>);\n        if (hazardList.length === 0) {\n            return (\n                <Typography variant=\"body1\">Potentially Hazardous: None</Typography>\n            );\n        }\n        else {\n            return (\n                <>\n                    <Typography variant=\"body1\">Potentially Hazardous:</Typography>\n                    <ul style={{ margin: 0, padding: 0, listStyle: \"none\" }}>{hazardList}</ul>\n                </>\n            );\n        }\n    };\n\n    if (loading) {\n        return (\n            <div id=\"progress\" >\n                <CircularProgress className={classes.progress} />\n            </div>\n        );\n    }\n    return (\n        <>\n            <Grid container>\n                <Grid item xs={12}>\n                    <Grid container justify=\"center\">\n                        <div id='asteroid-list'>\n                            <Paper id='heading-paper'>\n                                <Typography variant=\"body1\" gutterBottom>{`Near Earth Asteroids: ${res.length}`}</Typography>\n                                <PotentiallyHazardous/>\n                            </Paper>\n                            {asteroidList}\n                        </div>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </>\n    );\n}\n\nexport default AsteroidList;\n","import React, { useContext } from 'react';\nimport './App.css';\nimport 'typeface-roboto'\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport { ThemeContext } from \"./components/contexts/ThemeContext\";\nimport SimpleAppBar from \"./components/AppBar\";\nimport AsteroidList from \"./components/AsteroidList\";\n\nfunction App() {\n    const { theme } = useContext(ThemeContext);\n\n    return (\n        <div style={{ paddingTop: 56 }}>\n            <MuiThemeProvider theme={theme}>\n                <SimpleAppBar style={{ position: 'fixed', top: 0 }} />\n                <AsteroidList/>\n            </MuiThemeProvider>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport ThemeContextProvider from \"./components/contexts/ThemeContext\";\n\nReactDOM.render(\n    <ThemeContextProvider>\n        <App />\n    </ThemeContextProvider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}